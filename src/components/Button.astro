---
const { title, variant = "primary", href, target } = Astro.props;
---

<a
  class=`unset mt-2 mb-2 mx-auto c_Button c_Button--${variant} c_Button--size-normal`
  href={href}
  target={target}
>
  <span class="c_Button__inner">{title}</span>
</a>

<style>
  .c_Button--size-normal {
    --button-height: 50px;
  }

  .c_Button--size-small {
    --button-height: 40px;
  }

  a.c_Button {
    --background-color: #eeebe2;
    text-decoration: none;
    display: inline-block;
    min-height: var(--button-height);
    border-radius: 100px;
    align-self: start;
    padding: 2px;
    border: 0;
    background: linear-gradient(
        180deg,
        rgba(0, 0, 0, 0.4),
        var(--background-color, rgb(255, 255, 255))
      ),
      var(--accent-color);
    box-shadow:
      0 -2px 3px rgb(229, 229, 229),
      0 2px 3px 3px var(--background-color, rgb(255, 255, 255)),
      0 0 25px rgba(0, 0, 0, 0.1),
      0 -10px 5px var(--background-color, rgb(255, 255, 255)) inset;
    position: relative;
    text-transform: uppercase;
    letter-spacing: 0.3em;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    text-decoration: none;
    font-size: 16px;
  }

  :global(.dark) a.c_Button {
    --background-color: #090d19;
  }

  .c_Button--primary {
    --accent-color: #ff5a55;
    color: #fff;
  }

  .c_Button--secondary {
    --accent-color: #ffffff;
    color: #000;
  }

  .c_Button--rounded.c_Button--size-normal {
    @media (max-width: 499px) {
      --button-height: 40px;
    }
    @media (min-width: 500px) {
      --button-height: 66px;
    }
    width: var(--button-height);
  }

  .c_Button--rounded.c_Button--size-small {
    --button-height: 40px;

    width: var(--button-height);
  }

  .c_Button--rounded .c_Button__inner {
    padding: 0;
  }

  @media (max-width: 499px) {
    .c_Button--rounded svg {
      width: 20px;
      height: 20px;
    }
  }

  .c_Button[disabled] {
    --accent-color: #d3d3d3;
    pointer-events: none;
  }

  .c_Button::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    left: 0;
    background: linear-gradient(
        0deg,
        rgba(0, 0, 0, 0.19),
        rgba(255, 255, 255, 0.3)
      ),
      var(--accent-color);
    content: "";
    box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.1);
    display: block;
    transition:
      transform 0.3s,
      box-shadow 0.3s,
      background 0.1s 0.2s;
  }

  .c_Button__inner {
    position: relative;
    padding-left: 30px;
    padding-right: 30px;
    background-color: var(--accent-color);
    height: calc(var(--button-height) - 4px);
    border-radius: inherit;
    display: grid;
    place-content: center;
    transition:
      transform 0.3s,
      background 0.3s,
      box-shadow 0.3s;
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none;
    white-space: nowrap;
  }

  .c_Button:hover .c_Button__inner,
  .c_Button:focus .c_Button__inner {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)),
      var(--accent-color);
  }

  .c_Button:active::before {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.09), rgba(0, 0, 0, 0.16)),
      var(--accent-color);
    box-shadow:
      0 0 3px rgba(0, 0, 0, 0.6) inset,
      0 2px 1px -1px rgba(0, 0, 0, 0.1);
    transform: scale(0.97);
    transition:
      all 0.1s,
      background 0.05s;
  }

  .c_Button:active .c_Button__inner {
    transform: scale(0.97);
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)),
      var(--accent-color);
    transition: all 0.1s;
    box-shadow:
      0 5px 5px rgba(0, 0, 0, 0.2) inset,
      0 -3px 3px rgba(255, 255, 255, 0.2) inset;
  }
</style>
