---
const {
  title,
  flag,
  rendering,
  integration,
  lib1,
  lib2,
  lib3,
  author,
  authorUrl,
  githubUrl,
  liveUrl,
  contribute,
} = Astro.props;
import { Image } from "astro:assets";
---

<section class="mfexample">
  {
    flag ? (
      <div class="absolute py-1  transform rotate-45 text-center text-xs right-[-30px] top-[10px] w-[120px] drop-shadow-sm c-border z-20 text-xs">
        {flag}
      </div>
    ) : null
  }

  <a href={githubUrl} class="bigLink" target="_blank">
    <p class="pb-3 px-1 text-xs">
      <strong>{title}</strong><br />
      {rendering}
    </p>

    <div class="elements c_shadow">
      <div class="element vertical">
        <Image src={lib1} alt="lib1" class="m-auto size-6" />
      </div>
      <div class="element vertical">
        <Image src={lib2} alt="lib1" class="m-auto size-6" />
      </div>
      <div class="element vertical">
        <Image src={lib3} alt="lib1" class="m-auto size-6" />
      </div>
      <div class="element integration text-xs">
        {integration}
      </div>
    </div>
  </a>

  <div class="repository text-xs px-1">
    {
      author && (
        <a class="author" href={authorUrl} target="_blank">
          <>
            <strong>by {author}</strong>
          </>
        </a>
      )
    }
    {
      githubUrl && (
        <a class="githubUrl" href={githubUrl} target="_blank">
          GitHub
        </a>
      )
    }
    {
      contribute && (
        <a class="contribute" href="#contribute">
          Share your approach
        </a>
      )
    }
    {
      liveUrl && (
        <a class="liveUrl" href={liveUrl}>
          Live Demo
        </a>
      )
    }
  </div>
</section>

<style>
  .mfexample {
    @media (max-width: 499px) {
      padding: 0.5rem;
      border-radius: 10px;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      padding: 1rem;
      border-radius: 18px;
    }

    @media (min-width: 1000px) {
      padding: 1.5rem;
      border-radius: 24px;
    }

    border: 1px solid #ebeee2;
    display: grid;
    grid-template-rows: auto 1fr auto;

    overflow: hidden;
    position: relative;
  }
  :global(.dark) .mfexample {
    border: 1px solid #4b3648;
  }

  .elements {
    border-radius: 10px;
    display: grid;
    gap: 0.5rem;
    grid-template:
      "microfrontend microfrontend microfrontend" 1fr
      "integration integration integration" auto / 1fr 1fr 1fr;
  }

  .element {
    background-color: white;
    border: 1px solid #ebeee2;
    border-radius: 10px;
    padding: 9px;
    display: grid;
    place-content: center;
  }

  :global(.dark) .element {
    background-color: #0f182a;
    border: 1px solid #4b3648;
  }

  :global(.dark) .element img {
    filter: invert(1);
  }

  .element.vertical {
    min-height: 100px;
  }

  .element.integration {
    grid-column: span 3;
  }

  .c_shadow {
    filter: drop-shadow(-3px -3px 3px rgba(255, 255, 255, 0.4))
      drop-shadow(2px 3px 2px #edcdcd) drop-shadow(3px 6px 4px #edcdcd)
      drop-shadow(4px 9px 6px #edcdcd)
      drop-shadow(0px 4px 40px rgba(255, 90, 85, 0.3));
    transform: translateZ(0);
  }

  :global(.dark) .c_shadow {
    filter: drop-shadow(-3px -3px 3px rgba(255, 255, 255, 0.1))
      drop-shadow(2px 3px 2px #322030) drop-shadow(3px 6px 4px #322030)
      drop-shadow(4px 9px 6px #322030)
      drop-shadow(0px 4px 40px rgba(255, 90, 85, 0.3));
    transform: translateZ(0);
  }

  .repository {
    @media (max-width: 999px) {
      grid-template:
        "author" auto
        "githubUrl" auto
        "liveUrl" auto / 1fr;
    }

    @media screen and (min-width: 1000px) {
      grid-template:
        "author author" auto
        "githubUrl liveUrl" auto / 1fr 1fr;
    }

    margin-top: 1rem;
    display: grid;
    gap: 0.5rem;
  }

  a.author {
    grid-area: author;
    text-decoration: none;
  }

  .githubUrl {
    grid-area: githubUrl;
    justify-self: start;
  }

  .contribute {
    grid-column: 1 / 3;
  }

  .liveUrl {
    @media screen and (min-width: 1000px) {
      justify-self: end;
    }

    grid-area: liveUrl;
  }
  .bigLink,
  .bigLink:hover {
    text-decoration: none;
    display: block;
    color: inherit;
  }
</style>
