---
const { title } = Astro.props;
const { rendering } = Astro.props;
const { integration } = Astro.props;
const { lib1 } = Astro.props;
const { lib2 } = Astro.props;
const { lib3 } = Astro.props;
---

<section class="mfexample">
  {rendering ?
    <div
      class="absolute py-1 transform rotate-45 text-center text-xs right-[-30px] top-[10px] w-[120px] drop-shadow-sm c-border z-20 text-xs"
    >
      {rendering}
    </div>
  : null}

  <p class="pb-3 font-bold text-xs">{title}</p>

  <div class="elements c_shadow">
    <div class="element">
      <img src={lib1} typeof="foaf:Image" class="m-auto size-6" />
    </div>
    <div class="element">
      <img src={lib2} typeof="foaf:Image" class="m-auto size-6" />
    </div>
    <div class="element">
      <img src={lib3} typeof="foaf:Image" class="m-auto size-6" />
    </div>
    <div class="element integration text-xs">
      {integration}
    </div>
  </div>
</section>

<style>
  .mfexample {
    border: 1px solid #ebeee2;
    padding: 1.5rem;
    display: grid;
    grid-template-rows: auto 1fr;
    border-radius: 24px;
    overflow: hidden;
    position: relative;
  }
  .elements {
    border-radius: 10px;
    display: grid;
    gap: 0.5rem;
    grid-template:
      "microfrontend microfrontend microfrontend" 1fr
      "integration integration integration" 40px / 1fr 1fr 1fr;
  }

  .element {
    background-color: white;
    border: 1px solid #ebeee2;
    border-radius: 10px;
    display: grid;
    place-content: center;
  }

  .element.integration {
    grid-column: span 3;
  }

  .c_shadow {
    filter: drop-shadow(-3px -3px 3px rgba(255, 255, 255, 0.4))
      drop-shadow(2px 3px 2px #edcdcd) drop-shadow(3px 6px 4px #edcdcd)
      drop-shadow(4px 9px 6px #edcdcd)
      drop-shadow(0px 4px 40px rgba(255, 90, 85, 0.3));
    transform: translateZ(0);
  }
  .c-border {
    border: 1px solid #eeebe2;
    border-radius: 0.5rem;
    background: white;
  }
</style>
