---
---

<div class="mb-8">
  <h3
    class="font-bold text-text-heading text-2xl md:text-3xl pt-4 mb-8 w-fit overflow-hidden"
  >
    What do all implementations have in common?
  </h3>

  <div class="labeledImage">
    <img src="images/detailpage.jpg" />

    <div class="text left boundaries text-sm">
      <strong>Team boundaries</strong>
      <p>
        The webshop is divided into three systems. Each owned by a dedicated
        team.
      </p>
    </div>
    <i class="counter left boundaries"></i>

    <div class="text right features text-sm">
      <strong>Features & content</strong>
      <p>
        From an end-users perspective, all implementations should look and work
        the same.
      </p>
    </div>
    <i class="counter right features"></i>

    <div class="text left frameworkagnostic text-sm">
      <strong>Framework-agnostic integration</strong>
      <p>
        Although it's common, that adjacent teams use the same technologies,
        they must be able to evolve or change their tech-stack independently.
      </p>
    </div>
    <i class="counter left frameworkagnostic"></i>

    <div class="text right independence text-sm">
      <strong>Independent deployment</strong>
      <p>
        Teams must be able to develop, test and deliver new features without
        consulting other teams or touching their code.
      </p>
    </div>
    <i class="counter right independence"></i>
  </div>
</div>

<style>
  .labeledImage {
    @media (max-width: 499px) {
      grid-template-rows: 1.7fr 5fr 3fr 2fr 5fr repeat(4, auto);
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-template-rows: 1.7fr 5fr 3fr 2fr 5fr repeat(2, auto);
    }

    @media (min-width: 1000px) {
      grid-template-rows: 1.7fr 5fr 3fr 2fr 5fr;
    }
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    counter-reset: points;
  }

  .labeledImage img {
    @media (max-width: 499px) {
      grid-column: 1 / -1;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-column: 3 / -3;
    }

    @media (min-width: 1000px) {
      grid-column: 4 / -4;
    }
    grid-row: 1 / span 5;
  }

  .text {
    @media (max-width: 999px) {
      margin-top: 2rem;
      margin-left: 5.4%;
    }

    @media (min-width: 1000px) {
      border-top: 1px solid black;
      padding-top: 0.5rem;
    }

    position: relative;
    counter-increment: points;
  }

  .text.left {
    @media (max-width: 499px) {
      grid-column: 1 / -1;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-column: 1 / 6;
      padding-left: 10%;
    }

    @media (min-width: 1000px) {
      grid-column: 1 / 5;
      margin-left: 25px;
      margin-right: 9%;
      padding-right: 16%;
    }
  }

  .text.right {
    @media (max-width: 499px) {
      grid-column: 1 / -1;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-column: 6 / -1;
      padding-left: 10%;
    }

    @media (min-width: 1000px) {
      margin-left: 8%;
      padding-left: calc(17% + 25px);
      grid-column: -5 / -1;
    }
  }

  .text.boundaries {
    @media (max-width: 499px) {
      grid-row: 6;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-row: 6;
    }

    @media (min-width: 1000px) {
      grid-row: 2 / span 3;
    }
  }

  .text.features {
    @media (max-width: 499px) {
      grid-row: 7;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-row: 6;
    }

    @media (min-width: 1000px) {
      grid-row: 3 / span 3;
    }
  }

  .text.frameworkagnostic {
    @media (max-width: 499px) {
      grid-row: 8;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-row: 7;
    }

    @media (min-width: 1000px) {
      grid-row: 4 / span 2;
    }
  }

  .text.independence {
    @media (max-width: 499px) {
      grid-row: 9;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-row: 7;
    }

    @media (min-width: 1000px) {
      grid-row: 5;
    }
  }

  .text::after {
    display: grid;
    place-content: center;
    position: absolute;
    content: counter(points);
    height: 18px;
    width: 18px;
    background-color: #000;
    border-radius: 50%;
    color: #fff;
    transform: translateX(-25px);
    font-size: 13px;
  }

  @media (max-width: 999px) {
    .text::after {
      top: 3px;
    }
  }
  @media (min-width: 1000px) {
    .text::after {
      top: 13px;
    }
  }

  .counter {
    @media (max-width: 499px) {
      height: 18px;
      width: 18px;
      transform: translateY(-9px);
      margin: 0 25%;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      height: 18px;
      width: 18px;
      transform: translateY(-9px);
      margin: 0;
    }

    @media (min-width: 1000px) {
      height: 10px;
      width: 10px;
      transform: translateY(-5px);
      margin: 0 27%;
    }

    display: grid;
    place-content: center;
    background-color: #000;
    border-radius: 50%;
    color: #fff;
    font-size: 13px;
  }

  @media (max-width: 999px) {
    .counter::before {
      content: counter(points);
      font-style: normal;
    }
  }

  .counter.left {
    @media (max-width: 499px) {
      grid-column: 2 / 3;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-column: 3 / 4;
    }

    @media (min-width: 1000px) {
      grid-column: 4 / 5;
    }
    justify-self: self-end;
  }

  .counter.right {
    @media (max-width: 499px) {
      grid-column: -3 / -2;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-column: 10 / 11;
    }

    @media (min-width: 1000px) {
      grid-column: 9 / 10;
    }
  }

  .counter.boundaries {
    @media (max-width: 499px) {
      grid-row: 2 / span 3;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-row: 2 / span 3;
    }

    @media (min-width: 1000px) {
      grid-row: 2 / span 3;
    }
  }

  .counter.features {
    @media (max-width: 499px) {
      grid-row: 3 / span 3;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-row: 3 / span 3;
    }

    @media (min-width: 1000px) {
      grid-row: 3 / span 3;
    }
  }

  .counter.frameworkagnostic {
    @media (max-width: 499px) {
      grid-row: 4 / span 2;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-row: 4 / span 2;
    }

    @media (min-width: 1000px) {
      grid-row: 4 / span 2;
    }
  }

  .counter.independence {
    @media (max-width: 499px) {
      grid-row: 5;
    }

    @media (min-width: 500px) and (max-width: 999px) {
      grid-row: 5;
    }

    @media (min-width: 1000px) {
      grid-row: 5;
    }
  }
</style>
