---
---

<div class="mb-8">
  <h3
    class="font-bold text-text-heading text-2xl md:text-3xl pt-4 pb-2 w-fit overflow-hidden"
  >
    What do all implementations have in common?
  </h3>
  <ul class="mt-5 unset md:flex md:flex-wrap">
    <li class="p-3 basis-1/2 md:flex md:flex-row">
      <svg
        class="mr-auto ml-auto"
        xmlns="http://www.w3.org/2000/svg"
        width="90"
        height="32"
        viewBox="0 0 24 24"
      >
        <path
          class="svg-dark"
          d="M6 11q-2.075 0-3.537-1.463T1 6q0-2.1 1.463-3.55T6 1q2.1 0 3.55 1.45T11 6q0 2.075-1.45 3.538T6 11m8 12v-9h9v9zm3.725-15.3L7.7 17.7q.125.3.212.625T8 19q0 1.25-.862 2.125T5 22q-1.25 0-2.125-.875T2 19q0-1.275.875-2.137T5 16q.35 0 .675.088t.625.212l10-10.025q-.125-.3-.213-.613T16 5q0-1.275.875-2.137T19 2q1.275 0 2.138.863T22 5q0 1.25-.862 2.125T19 8q-.35 0-.663-.088t-.612-.212"
        >
        </path>
      </svg>
      <div class="pl-2">
        <strong>Team boundaries</strong>
        <p>
          The webshop is divided into three systems. Each owned by a dedicated
          team.
        </p>
      </div>
    </li>
    <li class="p-3 basis-1/2 md:flex md:flex-row">
      <svg
        class="mr-auto ml-auto"
        xmlns="http://www.w3.org/2000/svg"
        width="110"
        height="32"
        viewBox="0 0 24 24"
      >
        <path
          class="svg-light dark:svg-transparent"
          d="m15.55 11l2.76-5H6.16l2.37 5z"
        >
        </path><path
          class="svg-dark"
          d="M15.55 13c.75 0 1.41-.41 1.75-1.03l3.58-6.49A.996.996 0 0 0 20.01 4H5.21l-.94-2H1v2h2l3.6 7.59l-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2zM6.16 6h12.15l-2.76 5H8.53zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2s-.9-2-2-2m10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2s2-.9 2-2s-.9-2-2-2"
        >
        </path>
      </svg>
      <div class="pl-2">
        <strong>Features & content</strong>
        <p>
          From an end-users perspective, all implementations should look and
          work the same.
        </p>
      </div>
    </li>
    <li class="p-3 basis-1/2 md:flex md:flex-row">
      <svg
        class="mr-auto ml-auto"
        xmlns="http://www.w3.org/2000/svg"
        width="150"
        height="32"
        viewBox="0 0 24 24"
      >
        <path
          class="svg-light dark:svg-transparent"
          d="m19.28 8.6l-.7-1.21l-1.27.51l-1.06.43l-.91-.7c-.39-.3-.8-.54-1.23-.71l-1.06-.43l-.16-1.13L12.7 4h-1.4l-.19 1.35l-.16 1.13l-1.06.44c-.41.17-.82.41-1.25.73l-.9.68l-1.05-.42l-1.27-.52l-.7 1.21l1.08.84l.89.7l-.14 1.13c-.03.3-.05.53-.05.73s.02.43.05.73l.14 1.13l-.89.7l-1.08.84l.7 1.21l1.27-.51l1.06-.43l.91.7c.39.3.8.54 1.23.71l1.06.43l.16 1.13l.19 1.36h1.39l.19-1.35l.16-1.13l1.06-.43c.41-.17.82-.41 1.25-.73l.9-.68l1.04.42l1.27.51l.7-1.21l-1.08-.84l-.89-.7l.14-1.13c.04-.31.05-.52.05-.73c0-.21-.02-.43-.05-.73l-.14-1.13l.89-.7zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4s4 1.79 4 4s-1.79 4-4 4"
        >
        </path><path
          class="svg-dark"
          d="M19.43 12.98c.04-.32.07-.64.07-.98c0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46a.5.5 0 0 0-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65A.488.488 0 0 0 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1a.566.566 0 0 0-.18-.03c-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46a.5.5 0 0 0 .61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03c.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64zm-1.98-1.71c.04.31.05.52.05.73c0 .21-.02.43-.05.73l-.14 1.13l.89.7l1.08.84l-.7 1.21l-1.27-.51l-1.04-.42l-.9.68c-.43.32-.84.56-1.25.73l-1.06.43l-.16 1.13l-.2 1.35h-1.4l-.19-1.35l-.16-1.13l-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7l-1.06.43l-1.27.51l-.7-1.21l1.08-.84l.89-.7l-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13l-.89-.7l-1.08-.84l.7-1.21l1.27.51l1.04.42l.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43l.16-1.13l.2-1.35h1.39l.19 1.35l.16 1.13l1.06.43c.43.18.83.41 1.23.71l.91.7l1.06-.43l1.27-.51l.7 1.21l-1.07.85l-.89.7zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4s4-1.79 4-4s-1.79-4-4-4m0 6c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2"
        >
        </path>
      </svg>
      <div class="pl-2">
        <strong>Framework-agnostic integration</strong>
        <p>
          Although it's common, that adjacent teams use the same technologies,
          they must be able to evolve or change their tech-stack independently.
        </p>
      </div>
    </li>
    <li class="p-3 basis-1/2 md:flex md:flex-row">
      <svg
        class="mr-auto ml-auto"
        xmlns="http://www.w3.org/2000/svg"
        width="150"
        height="32"
        viewBox="0 0 24 24"
      >
        <path
          class="svg-light dark:svg-transparent"
          d="M3 15h.78c.55-.61 1.34-1 2.22-1s1.67.39 2.22 1H15V6H3z"
        >
        </path><path
          class="svg-dark"
          d="M17 8V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18c-.55 0-1-.45-1-1s.45-1 1-1s1 .45 1 1s-.45 1-1 1m9-3H8.22c-.55-.61-1.33-1-2.22-1s-1.67.39-2.22 1H3V6h12zm3 3c-.55 0-1-.45-1-1s.45-1 1-1s1 .45 1 1s-.45 1-1 1m-1-6V9.5h2.5l1.96 2.5z"
        >
        </path>
      </svg>
      <div class="pl-2">
        <strong>Independent deployment</strong>
        <p>
          Teams must be able to develop, test and deliver new features without
          consulting other teams or touching their code.
        </p>
      </div>
    </li>
  </ul>
</div>

<div class="mb-8">
  <h3
    class="font-bold text-text-heading text-2xl md:text-3xl pt-4 pb-2 w-fit overflow-hidden"
  >
    Technological challenges
  </h3>
  <ul class="mt-5 unset md:flex md:flex-wrap">
    <li class="p-3 basis-1/3">
      <img
        src="images/differences/stackCombinations.svg"
        typeof="foaf:Image"
        class="mb-5"
      />
      <div class="md:flex md:items-start">
        <div class="pl-2">
          <strong>Technology stack combinations</strong>
          <p>
            Seeing the same app implemented with different JavaScript frameworks
            was the fascinating core of TodoMVC. Here we zoom out one level and
            compare how micro frontends built with different tech-stacks can be
            integrated.
          </p>
        </div>
      </div>
    </li>
    <li class="p-3 basis-1/3">
      <img
        src="images/differences/shell.svg"
        typeof="foaf:Image"
        class="mb-5"
      />
      <div class="md:flex md:items-start">
        <div class="pl-2">
          <strong>Shell or no shell</strong>
          <p>
            Having a central application shell is a popular pattern, but it's
            not a requirement for building a micro frontends applications.
            Building a decentralized setup of self-contained systems that adhere
            to a set of rules is as valid as a meta-framework based solution.
          </p>
        </div>
      </div>
    </li>
    <li class="p-3 basis-1/3">
      <img
        src="images/differences/rendering.svg"
        typeof="foaf:Image"
        class="mb-5"
      />
      <div class="md:flex md:items-start">
        <div class="pl-2">
          <strong>Server or client rendered</strong>
          <p>
            If you render your application on the server, the client or both has
            a huge impact on your architecture and the required integration
            techniques.
          </p>
        </div>
      </div>
    </li>
    <li class="p-3 basis-1/3">
      <img
        src="images/differences/communication.svg"
        typeof="foaf:Image"
        class="mb-5"
      />
      <div class="md:flex md:items-start">
        <div class="pl-2">
          <strong>Communication patterns</strong>
          <p>
            Browser events, event-bus, URL parameter, shared state, via server
            or through your application shell? There are many ways to implement
            inter-team communication across micro frontends.
          </p>
        </div>
      </div>
    </li>
    <li class="p-3 basis-1/3">
      <img
        src="images/differences/deployment.svg"
        typeof="foaf:Image"
        class="mb-5"
      />
      <div class="md:flex md:items-start">
        <div class="pl-2">
          <strong>Deployment technique</strong>
          <p>
            The tractor store example is designed in a way that it can be
            deployed in a containerized, serverless or static way. There are
            also specialized micro frontend hosting platforms that solve
            specific architecture-related problems. Being able to compare
            different deployment variants for the same application is a valuable
            resource.
          </p>
        </div>
      </div>
    </li>
    <li class="p-3 basis-1/3">
      <img
        src="images/differences/shared.svg"
        typeof="foaf:Image"
        class="mb-5"
      />
      <div class="md:flex md:items-start">
        <div class="pl-2">
          <strong>Bonus: Shared UI components</strong>
          <p>
            The tractor store example can also be used to verify how a common
            design system can be implemented. In many projects, this is a core
            challenge when migrating to a micro frontends architecture. The
            "button" component is a suitable first candidate to unify.
          </p>
        </div>
      </div>
    </li>
  </ul>
</div>
